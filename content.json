{"meta":{"title":"PlusL 博客","subtitle":"","description":"","author":"John Doe","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"面向对象你不知道对象是个啥？","slug":"面向对象你不知道对象是什么？","date":"2022-10-09T02:13:24.482Z","updated":"2022-10-09T02:19:56.247Z","comments":true,"path":"2022/10/09/面向对象你不知道对象是什么？/","link":"","permalink":"http://example.com/2022/10/09/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E5%AF%B9%E8%B1%A1%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F/","excerpt":"","text":"不会吧不会吧，不会真有人用了这么久面向对象语言还不知道对象是个啥吧😏 一、对象的组成对象由：对象头、实例数据、填充字节填充字节就不谈了，就是补充空字节满足Java对象必须是8byte的倍数。 来来来，大的要来了😱 ClassPointer：很好理解，他指向了当前对象类型所在方法区中的类型数据（也就是跑到方法区去找这个对象到底是啥类型） 方法区在JDK 1.8后移至元空间（MetaSpace） 2. MarkWordMarkWord存储了很多与当前对象运行时状态相关的数据，图如下：对象头被设计的极小，MarkWord只有32bit，能够很大程度的节省空间。我们可以多关注最后面的锁标志位，锁标志位分别代表着锁的四种状态：无锁、偏向锁、轻量级锁、重量级锁。而这里的锁状态与synchronized关键字有关 （详见Java关键字）需要注意的是：锁只能升级不能降级:::warning锁的升级全在MarkWord中，现在我们来看看锁到底是如何升级的 无锁到偏向锁：最初始时，对象为无锁状态，锁标志位为01，且是否偏向锁位为0.当一个线程前来加锁，对象头记录这个对象的HashCode，并设置偏向锁。 偏向锁到轻量级锁：突然有一天，对象发现不止有一个线程在争抢他（多个线程正在竞争锁），那么偏向锁就升级为轻量级锁。 在轻量级锁中，线程争抢对象的方式是CAS。 轻量级锁到重量级锁：当对象被轻量级锁锁定，其他线程想要获得该对象就需要进行自旋抢，当正在自旋的线程超过一个，则升级为重量级锁。:::","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2022-10-09T01:35:40.221Z","updated":"2022-10-09T01:35:40.221Z","comments":true,"path":"2022/10/09/hello-world/","link":"","permalink":"http://example.com/2022/10/09/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}